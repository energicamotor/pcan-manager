<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>PCANDevice</id>
    <version>1.3.1</version>
    <authors>Ioannis Deligiannis</authors>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <license type="file">LICENSE.md</license>
    <licenseUrl>https://aka.ms/deprecateLicenseUrl</licenseUrl>
    <description>PeakCAN USB device helper class for C#

## How to use this nuget package?

```
using System.Collections.Generic;
using PCANDevice;
namespace ConsoleApp
{
    class Program
    {
        public static int callback(object[] args)
        {
            TPCANMsg msg = (TPCANMsg)args[0];

            return 0;
        }


        static void Main(string[] args)
        {
            List&lt;ushort&gt; interfaces = PCANDevice.PCANManager.GetAllAvailable();
            PCANDevice.PCANManager pcan = new PCANDevice.PCANManager();

            var oo = pcan.Connect(interfaces[0], PCANDevice.TPCANBaudrate.PCAN_BAUD_500K);
            pcan.AddReceiveCallback(callback);
            pcan.SendFrame(1, 8, new byte[] { 0, 1, 2, 3, 4, 5, 6, 7 });
            pcan.SendFrameExt(0x7ff1, 8, new byte[] { 0, 1, 2, 3, 4, 5, 6, 7 });
            pcan.ActivateAutoReceive();

            ...
            ...
            ...


            pcan.Disconnect();
        }
    }
}
```</description>
    <copyright>Copyright (C) 2021 Ioannis Deligiannis | Devcoons Blog</copyright>
    <repository url="https://github.com/devcoons/pcan-manager" />
    <dependencies>
      <group targetFramework=".NETStandard2.0" />
    </dependencies>
  </metadata>
  <files>
    <file src="C:\Users\ioadel\Desktop\pcan-manager\PCANDevice\bin\Debug\netstandard2.0\PCANDevice.dll" target="lib\netstandard2.0\PCANDevice.dll" />
    <file src="C:\Users\ioadel\Desktop\pcan-manager\LICENSE.md" target="LICENSE.md" />
  </files>
</package>